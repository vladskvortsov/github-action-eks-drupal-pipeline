name: "Terraform Infrastructure Change Management Pipeline with GitHub Actions"
 
on:
  push:
    branches:
      - "master"
 
env:
 # verbosity setting for Terraform logs
 TF_LOG: INFO
 # Credentials for deployment to AWS
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 # S3 bucket for the Terraform state
 BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}

jobs:
 terraform:
   name: "Terraform Infrastructure Change Management"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       working-directory: ./terraform/

   steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v2

     - name: Deploy
       uses: reggionick/s3-deploy@v3
       with:
         bucket: ${{ secrets.BUCKET_TF_STATE }}
         bucket-region: ${{ secrets.AWS_DEFAULT_REGION }}
         private: true

     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.3.0
    
     - name: Terraform init
       id: init
       run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
       

     - name: Terraform Plan
       run: terraform plan -no-color
       continue-on-error: true
    
 
     - name: Terraform Plan Status
       if: steps.plan.outcome == 'failure'
       run: exit 1
 
     - name: Terraform Apply
       run: terraform apply -auto-approve 
       continue-on-error: true
       
     - name: Kubernetes config
       uses: imehedi/actions-awscli-v2@latest
       with:
           args: eks update-kubeconfig --name drupal-eks-cluster
       env:
           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
       continue-on-error: true
       
     - name: AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: "eu-west-3"

     - name: Run Ansible playbook
       uses: dawidd6/action-ansible-playbook@v2
       with:
         # Required, playbook filepath
         playbook: deploy.yml
         # Optional, directory where playbooks live
         directory: ./ansible/deploy.yml

         inventory: |
           [all]
           localhost

     - name: Terraform Destroy
       id: destroy
       working-directory: ./terraform/
       run: terraform destroy -auto-approve
